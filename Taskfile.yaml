version: "3"

vars:
  name: gazette

dotenv: [".env"]

tasks:
  build:
    desc: Build from source
    vars:
      app: '{{.app | default "server"}}'
      version:
        sh: git rev-parse --short HEAD
    preconditions:
      - sh: '[ "{{.app}}" = "server" ] || [ "{{.app}}" = "worker" ] || [ "{{.app}}" = "scheduler" ]'
        msg: "❌ Error: invalid app '{{.app}}', valid options are server, worker, or scheduler."
    cmds:
      - |
        go build -ldflags "-X main.Version={{.version}}" -o bin/{{.app}} ./cmd/{{.app}}

  build-image:
    desc: Build Docker image for the given app
    vars:
      app: '{{.app | default "server"}}'
      version:
        sh: git rev-parse --short HEAD
    preconditions:
      - sh: '[ "{{.app}}" = "server" ] || [ "{{.app}}" = "worker" ] || [ "{{.app}}" = "scheduler" ]'
        msg: "❌ Error: invalid app '{{.app}}', valid options are server, worker, or scheduler."
    cmds:
      - |
        docker build \
         --build-arg VERSION={{.version}} \
         --platform linux/amd64 \
         -f docker/{{.app}}/Dockerfile \
         -t {{.name}}-{{.app}} \
         .
    dir: ./

  push-image:
    desc: Push Docker image for the given app
    deps:
      - build-image
    vars:
      app: '{{.app | default "server"}}'
      version:
        sh: git rev-parse --short HEAD
      tag: "{{.tag | default .version}}"
    requires:
      vars:
        - DOCKER_REGISTRY_URL
    preconditions:
      - sh: '[ "{{.app}}" = "server" ] || [ "{{.app}}" = "worker" ] || [ "{{.app}}" = "scheduler" ]'
        msg: "❌ Error: invalid app '{{.app}}', valid options are server, worker, or scheduler."
    cmds:
      - |
        docker tag {{.name}}-{{.app}} {{.DOCKER_REGISTRY_URL}}/{{.app}}:{{.tag}}
        docker push {{.DOCKER_REGISTRY_URL}}/{{.app}}:{{.tag}}
    dir: ./

  push:
    desc: Build and push all images
    requires:
      vars:
        - DOCKER_REGISTRY_URL
    cmds:
      - task: push-image
        vars: { app: "server" }
      - task: push-image
        vars: { app: "worker" }
      - task: push-image
        vars: { app: "scheduler" }

  compose:
    desc: Docker compose
    vars:
      version:
        sh: git rev-parse --short HEAD
    cmds:
      - |
        docker compose {{.CLI_ARGS}}
    env:
      GAZETTE_VERSION: "{{ .version }}"
    dir: ./

  swagger:
    desc: Generate swagger docs
    cmds:
      - |
        swag init --parseInternal --parseDependency -g cmd/server/main.go
        npx swagger-typescript-api generate -p ./docs/swagger.json -o ./ui/src/api --modular
    dir: ./
