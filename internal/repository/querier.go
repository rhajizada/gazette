// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddItemToCollection(ctx context.Context, arg AddItemToCollectionParams) (CollectionItem, error)
	CountCollectionsByItemID(ctx context.Context, arg CountCollectionsByItemIDParams) (int64, error)
	CountCollectionsByUserID(ctx context.Context, userID uuid.UUID) (int64, error)
	CountDistinctCategories(ctx context.Context) (int64, error)
	CountFeeds(ctx context.Context) (int64, error)
	CountFeedsByUserID(ctx context.Context, userID uuid.UUID) (int64, error)
	// number of categories to skip
	CountItemsByCategoryForUser(ctx context.Context, categories []string) (int64, error)
	CountItemsByFeedID(ctx context.Context, feedID uuid.UUID) (int64, error)
	CountItemsInCollection(ctx context.Context, collectionID uuid.UUID) (int64, error)
	CountLikedItems(ctx context.Context, userID uuid.UUID) (int64, error)
	CountSimilarItemsByItemID(ctx context.Context, itemID uuid.UUID) (int64, error)
	CountSubscribedItemsByUser(ctx context.Context, userID uuid.UUID) (int64, error)
	CountSuggestedItemsByUser(ctx context.Context, userID uuid.UUID) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateCollection(ctx context.Context, arg CreateCollectionParams) (Collection, error)
	CreateFeed(ctx context.Context, arg CreateFeedParams) (Feed, error)
	CreateItem(ctx context.Context, arg CreateItemParams) (Item, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserFeedSubscription(ctx context.Context, arg CreateUserFeedSubscriptionParams) (UserFeed, error)
	CreateUserLike(ctx context.Context, arg CreateUserLikeParams) (UserLike, error)
	DeleteCollectionByID(ctx context.Context, id uuid.UUID) error
	DeleteFeedByID(ctx context.Context, id uuid.UUID) error
	DeleteItemByID(ctx context.Context, id uuid.UUID) error
	DeleteUserByID(ctx context.Context, id uuid.UUID) error
	DeleteUserFeedSubscription(ctx context.Context, arg DeleteUserFeedSubscriptionParams) error
	DeleteUserLike(ctx context.Context, arg DeleteUserLikeParams) error
	ExportFeedsByUserID(ctx context.Context, arg ExportFeedsByUserIDParams) ([]string, error)
	GetCollectionByID(ctx context.Context, id uuid.UUID) (Collection, error)
	GetCollectionItem(ctx context.Context, arg GetCollectionItemParams) (CollectionItem, error)
	GetFeedByFeedLink(ctx context.Context, feedLink string) (Feed, error)
	GetFeedByID(ctx context.Context, id uuid.UUID) (Feed, error)
	GetItemByID(ctx context.Context, id uuid.UUID) (Item, error)
	GetLastItem(ctx context.Context, feedID uuid.UUID) (Item, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	GetUserBySub(ctx context.Context, sub string) (User, error)
	GetUserFeedByID(ctx context.Context, arg GetUserFeedByIDParams) (GetUserFeedByIDRow, error)
	GetUserFeedSubscription(ctx context.Context, arg GetUserFeedSubscriptionParams) (UserFeed, error)
	GetUserLike(ctx context.Context, arg GetUserLikeParams) (UserLike, error)
	ListCollectionsByItemID(ctx context.Context, arg ListCollectionsByItemIDParams) ([]Collection, error)
	ListCollectionsByUser(ctx context.Context, arg ListCollectionsByUserParams) ([]Collection, error)
	ListDistinctCategories(ctx context.Context, arg ListDistinctCategoriesParams) ([]interface{}, error)
	ListFeeds(ctx context.Context, arg ListFeedsParams) ([]Feed, error)
	ListFeedsByUserID(ctx context.Context, arg ListFeedsByUserIDParams) ([]ListFeedsByUserIDRow, error)
	ListItemsByCategoryForUser(ctx context.Context, arg ListItemsByCategoryForUserParams) ([]ListItemsByCategoryForUserRow, error)
	ListItemsByFeedID(ctx context.Context, arg ListItemsByFeedIDParams) ([]Item, error)
	ListItemsByFeedIDForUser(ctx context.Context, arg ListItemsByFeedIDForUserParams) ([]ListItemsByFeedIDForUserRow, error)
	ListItemsInCollection(ctx context.Context, arg ListItemsInCollectionParams) ([]ListItemsInCollectionRow, error)
	ListSimilarItemsByItemIDForUser(ctx context.Context, arg ListSimilarItemsByItemIDForUserParams) ([]ListSimilarItemsByItemIDForUserRow, error)
	ListSubscribedItemsByUser(ctx context.Context, arg ListSubscribedItemsByUserParams) ([]ListSubscribedItemsByUserRow, error)
	ListSuggestedItemsByUser(ctx context.Context, arg ListSuggestedItemsByUserParams) ([]ListSuggestedItemsByUserRow, error)
	ListSuggestedItemsForUserCache(ctx context.Context, userID uuid.UUID) ([]ListSuggestedItemsForUserCacheRow, error)
	ListUserFeedSubscriptions(ctx context.Context, arg ListUserFeedSubscriptionsParams) ([]UserFeed, error)
	ListUserLikedItems(ctx context.Context, arg ListUserLikedItemsParams) ([]ListUserLikedItemsRow, error)
	ListUserLikesByItem(ctx context.Context, arg ListUserLikesByItemParams) ([]UserLike, error)
	ListUserLikesByUser(ctx context.Context, arg ListUserLikesByUserParams) ([]ListUserLikesByUserRow, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	RemoveItemFromCollection(ctx context.Context, arg RemoveItemFromCollectionParams) error
	UpdateCollectionByID(ctx context.Context, arg UpdateCollectionByIDParams) (Collection, error)
	UpdateFeedByID(ctx context.Context, arg UpdateFeedByIDParams) (Feed, error)
	UpdateItemByID(ctx context.Context, arg UpdateItemByIDParams) (Item, error)
	UpdateUserByID(ctx context.Context, arg UpdateUserByIDParams) (User, error)
}

var _ Querier = (*Queries)(nil)
