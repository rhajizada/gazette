// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"time"

	"github.com/google/uuid"
	gofeed "github.com/mmcdole/gofeed"
	"github.com/pgvector/pgvector-go"
	typeext "github.com/rhajizada/gazette/internal/typeext"
)

type Collection struct {
	ID          uuid.UUID `json:"id"`
	UserID      uuid.UUID `json:"userId"`
	Name        string    `json:"name"`
	CreatedAt   time.Time `json:"createdAt"`
	LastUpdated time.Time `json:"lastUpdated"`
}

type CollectionEmbeddingCluster struct {
	CollectionID uuid.UUID        `json:"collectionId"`
	ClusterID    int32            `json:"clusterId"`
	Centroid     *pgvector.Vector `json:"centroid"`
	MemberCount  int32            `json:"memberCount"`
	CreatedAt    time.Time        `json:"createdAt"`
	UpdatedAt    time.Time        `json:"updatedAt"`
}

type CollectionItem struct {
	CollectionID uuid.UUID `json:"collectionId"`
	ItemID       uuid.UUID `json:"itemId"`
	AddedAt      time.Time `json:"addedAt"`
}

type Feed struct {
	ID              uuid.UUID       `json:"id"`
	Title           *string         `json:"title"`
	Description     *string         `json:"description"`
	Link            *string         `json:"link"`
	FeedLink        string          `json:"feedLink"`
	Links           []string        `json:"links"`
	UpdatedParsed   *time.Time      `json:"updatedParsed"`
	PublishedParsed *time.Time      `json:"publishedParsed"`
	Authors         typeext.Authors `json:"authors"`
	Language        *string         `json:"language"`
	Image           *gofeed.Image   `json:"image"`
	Copyright       *string         `json:"copyright"`
	Generator       *string         `json:"generator"`
	Categories      []string        `json:"categories"`
	FeedType        *string         `json:"feedType"`
	FeedVersion     *string         `json:"feedVersion"`
	CreatedAt       time.Time       `json:"createdAt"`
	LastUpdatedAt   time.Time       `json:"lastUpdatedAt"`
}

type Item struct {
	ID              uuid.UUID          `json:"id"`
	FeedID          uuid.UUID          `json:"feedId"`
	Title           *string            `json:"title"`
	Description     *string            `json:"description"`
	Content         *string            `json:"content"`
	Link            string             `json:"link"`
	Links           []string           `json:"links"`
	UpdatedParsed   *time.Time         `json:"updatedParsed"`
	PublishedParsed *time.Time         `json:"publishedParsed"`
	Authors         typeext.Authors    `json:"authors"`
	Guid            *string            `json:"guid"`
	Image           *gofeed.Image      `json:"image"`
	Categories      []string           `json:"categories"`
	Enclosures      typeext.Enclosures `json:"enclosures"`
	CreatedAt       time.Time          `json:"createdAt"`
	UpdatedAt       time.Time          `json:"updatedAt"`
}

type ItemEmbedding struct {
	ID         uuid.UUID        `json:"id"`
	ItemID     uuid.UUID        `json:"itemId"`
	ChunkIndex int32            `json:"chunkIndex"`
	Embedding  *pgvector.Vector `json:"embedding"`
	CreatedAt  time.Time        `json:"createdAt"`
	UpdatedAt  time.Time        `json:"updatedAt"`
}

type User struct {
	ID            uuid.UUID `json:"id"`
	Sub           string    `json:"sub"`
	Name          string    `json:"name"`
	Email         string    `json:"email"`
	CreatedAt     time.Time `json:"createdAt"`
	LastUpdatedAt time.Time `json:"lastUpdatedAt"`
}

type UserEmbeddingCluster struct {
	UserID      uuid.UUID        `json:"userId"`
	ClusterID   int32            `json:"clusterId"`
	Centroid    *pgvector.Vector `json:"centroid"`
	MemberCount int32            `json:"memberCount"`
	CreatedAt   time.Time        `json:"createdAt"`
	UpdatedAt   time.Time        `json:"updatedAt"`
}

type UserFeed struct {
	UserID       uuid.UUID `json:"userId"`
	FeedID       uuid.UUID `json:"feedId"`
	SubscribedAt time.Time `json:"subscribedAt"`
}

type UserLike struct {
	UserID  uuid.UUID `json:"userId"`
	ItemID  uuid.UUID `json:"itemId"`
	LikedAt time.Time `json:"likedAt"`
}
